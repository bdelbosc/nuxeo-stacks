---
- name: Init data directory
  file:
    path: "{{ root_path }}"
    state: directory
    recurse: yes
  tags:
    - test

- name: Init data directory Nuxeo
  file:
    path: "{{ root_path }}/data/{{ item }}/data"
    state: directory
    recurse: yes
  with_items: "{{ nuxeo_nodes }}"

- name: Init packages directory Nuxeo
  file:
    path: "{{ root_path }}/data/{{ item }}/packages"
    state: directory
    recurse: yes
  with_items: "{{ nuxeo_nodes }}"

- name: Copy the nuxeo init
  copy:
    src: nuxeo
    dest: "{{ root_path }}"

- name: Init binaries directory Nuxeo
  file:
    path: "{{ root_path }}/data/nuxeo-binaries"
    state: directory
    recurse: yes

- name: Init profiler directory Nuxeo
  file:
    path: "{{ root_path }}/data/profiler"
    state: directory
    recurse: yes

- name: Install opentelemetry agent
  get_url:
    url: https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.9.1/opentelemetry-javaagent.jar
    use_proxy: no
    validate_certs: no
    dest: "{{ root_path }}/data/profiler"
    mode: 0644
  when: "jaeger or zipkin"

- name: Copy the nuxeo instance clid
  copy:
    src: "{{ instance_clid }}"
    dest: "{{ root_path }}/data/{{ item }}/data/instance.clid"
    mode: 0644
  with_items: "{{ nuxeo_nodes }}"

- name: Init data directory Elastic
  file:
    path: "{{ root_path }}/data/elastic"
    state: directory
    recurse: yes
  when: "elastic"

- name: Init data directory Kafka
  file:
    path: "{{ root_path }}/data/kafka/data"
    state: directory
    recurse: yes
  when: "kafka or kafkaconfluent"

- name: Generate the nuxeo.conf file
  template:
    src: nuxeo.conf.j2
    dest: "{{root_path}}/nuxeo/{{ item }}.conf"
  with_items: "{{ nuxeo_nodes }}"

- name: Add S3 MP
  set_fact:
    nuxeo_packages: "{{ nuxeo_packages }} amazon-s3-online-storage"
  when: "minio"

- name: Generate the nuxeo init script legacy docker image
  template:
    src: init-nuxeo.sh.j2
    dest: "{{root_path}}/nuxeo/init-nuxeo.sh"
  when: "nuxeo_version is version_compare('11.0', '<')"

- name: Generate the nuxeo init script new docker image
  template:
    src: nuxeo-stack-entrypoint.sh.j2
    dest: "{{root_path}}/nuxeo/nuxeo-stack-entrypoint.sh"
    mode: 0755
  when: "nuxeo_version is version_compare('11.0', '>=')"

- name: Copy the mongo init
  copy:
    src: mongo
    dest: "{{ root_path }}"
  when: "mongo"

- name: Copy the postgres init
  copy:
    src: postgres
    dest: "{{ root_path }}"
  when: "postgres"

- name: Copy the graphite init
  copy:
    src: graphite
    dest: "{{ root_path }}"
  when: "graphite"
  tags:
    - test

- name: Copy the grafana init
  copy:
    src: grafana
    dest: "{{ root_path }}"
  when: "grafana"

- name: Override grafana for 9.10
  copy:
    src: "grafana-9.10/provisioning"
    dest: "{{ root_path }}/grafana"
  when: "grafana and nuxeo_version == '9.10'"

- name: Override grafana for 10.10
  copy:
    src: "grafana-9.10/provisioning"
    dest: "{{ root_path }}/grafana"
  when: "grafana and nuxeo_version == '10.10'"

- name: Copy the stream init
  copy:
    src: stream
    dest: "{{ root_path }}"
    mode: 0755
  when: "stream"

- name: Copy kafkaHQ init
  copy:
    src: kafkahq
    dest: "{{ root_path }}"
  when: "kafkahq"

- name: Copy Prometheus init
  copy:
    src: prometheus
    dest: "{{ root_path }}"
  when: "prometheus"

- name: Generate the docker-compose file
  template:
    src: docker-compose.yml.j2
    dest: "{{root_path}}/docker-compose.yml"
  tags:
    - test

- name: Configure Kafka SSL
  copy:
    src: kafkassl
    dest: "{{ root_path }}"
  when: "kafkassl"

- name: Add Kafka SASL JAAS conf
  template:
    src: kafka-server-jaas.conf.j2
    dest: "{{root_path}}/kafkassl/kafka-server-jaas.conf"
  tags:
    - test
  when: "kafkassl"

- name: Add a gitignore
  copy:
    src: gitignore
    dest: "{{root_path}}/.gitinore"

- name: Copy scripts
  copy:
    src: bin
    dest: "{{ root_path }}"
    mode: preserve

- name: Generate the esync conf
  template:
    src: esync.conf.j2
    dest: "{{root_path}}/bin/esync.conf"
